plugins {
    id 'org.springframework.boot' version '2.6.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}
group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
apply plugin: 'java'

task stage(type: Copy, dependsOn: [clean, build]) {
    from jar.archivePath
    into project.rootDir
    rename {
        'app.jar'
    }
}
stage.mustRunAfter(clean)

clean {
    project.file('app.jar').delete()
}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.example.diploma.DiplomaApplication'
        )
    }
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'io.micrometer', name: 'micrometer-registry-prometheus', version: '1.8.5'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '2.6.6'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.jetbrains:annotations:20.1.0'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // JTS
    implementation group: 'org.locationtech.jts', name: 'jts-core', version: '1.15.1'
    // graphHopper
    implementation group: 'com.graphhopper', name: 'graphhopper-core', version: '5.0'
    implementation group: 'com.graphhopper', name: 'graphhopper-web', version: '5.0'
    // jts -> GeoJSON
    implementation group: 'org.wololo', name: 'jts2geojson', version: '0.16.1'
    // Sentry
    implementation group: 'io.sentry', name: 'sentry-logback', version: '5.0.1'
}
tasks.named('test') {
    useJUnitPlatform()
}